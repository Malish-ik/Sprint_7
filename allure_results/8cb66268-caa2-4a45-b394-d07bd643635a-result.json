{"name": "Проверка создания заказа с разными вариантами цвета самоката", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидаемый код: 201, полученный код: 500,              ожидаемый текст содержит: \"track\", полученный текст: {\"code\":500,\"message\":\"values.map is not a function\"}\nassert (201 == 500)\n +  where 500 = <Response [500]>.status_code", "trace": "self = <test_create_order.TestCreateOrder object at 0x00000265A48BE630>\nregister_new_order = {'adress': '012 Thomas Union Suite 022\\nMaybury, LA 34202', 'color': ['GREY'], 'comment': 'This serious garden join above painting mention.', 'deliveryDate': datetime.date(2024, 7, 4), ...}\ncolor = ['GREY']\n\n    @allure.title('Проверка создания заказа с разными вариантами цвета самоката')\n    @allure.description('Создаем заказ, передаем в параметре color возможные цвета по отдельности, \\\n    оба цвета сразу, не выбираем ни одного цвета, проверяем, что код ответа == 201, текст ответа содержит track')\n    @pytest.mark.parametrize(\"color\", Data.color_data)\n    def test_order_any_color_success(self, register_new_order, color):\n        register_new_order['color'] = color\n        response = requests.post(f'{Data.main_page_url}{Data.api_order}', data=register_new_order, timeout=7)\n>       assert 201 == response.status_code and 'track' in response.text, \\\n            (f'Ожидаемый код: 201, полученный код: {response.status_code}, \\\n             ожидаемый текст содержит: \"track\", полученный текст: {response.text}')\nE       AssertionError: Ожидаемый код: 201, полученный код: 500,              ожидаемый текст содержит: \"track\", полученный текст: {\"code\":500,\"message\":\"values.map is not a function\"}\nE       assert (201 == 500)\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\test_create_order.py:16: AssertionError"}, "description": "Создаем заказ, передаем в параметре color возможные цвета по отдельности,     оба цвета сразу, не выбираем ни одного цвета, проверяем, что код ответа == 201, текст ответа содержит track", "parameters": [{"name": "color", "value": "['GREY']"}], "start": 1719995275471, "stop": 1719995275526, "uuid": "73f5bf83-f86c-4aed-bd3f-211d3c3d0075", "historyId": "99d6b774a03393c2e684f48ae34725ed", "testCaseId": "f954c03f6b75ad7cc1650fff77f28077", "fullName": "tests.test_create_order.TestCreateOrder#test_order_any_color_success", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "InnaNB"}, {"name": "thread", "value": "5680-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}